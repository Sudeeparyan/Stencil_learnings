/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ConfigurationPanel {
    }
    interface DeviceConfigurationHolder {
    }
    interface DevicePage {
    }
    interface DriverHeader {
    }
    interface DropdownList {
        "dropDownOptions": string[];
    }
    interface ErrorFlag {
    }
    interface OperationMode {
    }
    interface SeparatorLine {
    }
    interface SvgView {
    }
    interface TableView {
    }
}
declare global {
    interface HTMLConfigurationPanelElement extends Components.ConfigurationPanel, HTMLStencilElement {
    }
    var HTMLConfigurationPanelElement: {
        prototype: HTMLConfigurationPanelElement;
        new (): HTMLConfigurationPanelElement;
    };
    interface HTMLDeviceConfigurationHolderElement extends Components.DeviceConfigurationHolder, HTMLStencilElement {
    }
    var HTMLDeviceConfigurationHolderElement: {
        prototype: HTMLDeviceConfigurationHolderElement;
        new (): HTMLDeviceConfigurationHolderElement;
    };
    interface HTMLDevicePageElement extends Components.DevicePage, HTMLStencilElement {
    }
    var HTMLDevicePageElement: {
        prototype: HTMLDevicePageElement;
        new (): HTMLDevicePageElement;
    };
    interface HTMLDriverHeaderElement extends Components.DriverHeader, HTMLStencilElement {
    }
    var HTMLDriverHeaderElement: {
        prototype: HTMLDriverHeaderElement;
        new (): HTMLDriverHeaderElement;
    };
    interface HTMLDropdownListElement extends Components.DropdownList, HTMLStencilElement {
    }
    var HTMLDropdownListElement: {
        prototype: HTMLDropdownListElement;
        new (): HTMLDropdownListElement;
    };
    interface HTMLErrorFlagElement extends Components.ErrorFlag, HTMLStencilElement {
    }
    var HTMLErrorFlagElement: {
        prototype: HTMLErrorFlagElement;
        new (): HTMLErrorFlagElement;
    };
    interface HTMLOperationModeElement extends Components.OperationMode, HTMLStencilElement {
    }
    var HTMLOperationModeElement: {
        prototype: HTMLOperationModeElement;
        new (): HTMLOperationModeElement;
    };
    interface HTMLSeparatorLineElement extends Components.SeparatorLine, HTMLStencilElement {
    }
    var HTMLSeparatorLineElement: {
        prototype: HTMLSeparatorLineElement;
        new (): HTMLSeparatorLineElement;
    };
    interface HTMLSvgViewElement extends Components.SvgView, HTMLStencilElement {
    }
    var HTMLSvgViewElement: {
        prototype: HTMLSvgViewElement;
        new (): HTMLSvgViewElement;
    };
    interface HTMLTableViewElement extends Components.TableView, HTMLStencilElement {
    }
    var HTMLTableViewElement: {
        prototype: HTMLTableViewElement;
        new (): HTMLTableViewElement;
    };
    interface HTMLElementTagNameMap {
        "configuration-panel": HTMLConfigurationPanelElement;
        "device-configuration-holder": HTMLDeviceConfigurationHolderElement;
        "device-page": HTMLDevicePageElement;
        "driver-header": HTMLDriverHeaderElement;
        "dropdown-list": HTMLDropdownListElement;
        "error-flag": HTMLErrorFlagElement;
        "operation-mode": HTMLOperationModeElement;
        "separator-line": HTMLSeparatorLineElement;
        "svg-view": HTMLSvgViewElement;
        "table-view": HTMLTableViewElement;
    }
}
declare namespace LocalJSX {
    interface ConfigurationPanel {
    }
    interface DeviceConfigurationHolder {
    }
    interface DevicePage {
    }
    interface DriverHeader {
    }
    interface DropdownList {
        "dropDownOptions"?: string[];
        "onOperationMode"?: (event: CustomEvent<string>) => void;
    }
    interface ErrorFlag {
    }
    interface OperationMode {
    }
    interface SeparatorLine {
    }
    interface SvgView {
    }
    interface TableView {
    }
    interface IntrinsicElements {
        "configuration-panel": ConfigurationPanel;
        "device-configuration-holder": DeviceConfigurationHolder;
        "device-page": DevicePage;
        "driver-header": DriverHeader;
        "dropdown-list": DropdownList;
        "error-flag": ErrorFlag;
        "operation-mode": OperationMode;
        "separator-line": SeparatorLine;
        "svg-view": SvgView;
        "table-view": TableView;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "configuration-panel": LocalJSX.ConfigurationPanel & JSXBase.HTMLAttributes<HTMLConfigurationPanelElement>;
            "device-configuration-holder": LocalJSX.DeviceConfigurationHolder & JSXBase.HTMLAttributes<HTMLDeviceConfigurationHolderElement>;
            "device-page": LocalJSX.DevicePage & JSXBase.HTMLAttributes<HTMLDevicePageElement>;
            "driver-header": LocalJSX.DriverHeader & JSXBase.HTMLAttributes<HTMLDriverHeaderElement>;
            "dropdown-list": LocalJSX.DropdownList & JSXBase.HTMLAttributes<HTMLDropdownListElement>;
            "error-flag": LocalJSX.ErrorFlag & JSXBase.HTMLAttributes<HTMLErrorFlagElement>;
            "operation-mode": LocalJSX.OperationMode & JSXBase.HTMLAttributes<HTMLOperationModeElement>;
            "separator-line": LocalJSX.SeparatorLine & JSXBase.HTMLAttributes<HTMLSeparatorLineElement>;
            "svg-view": LocalJSX.SvgView & JSXBase.HTMLAttributes<HTMLSvgViewElement>;
            "table-view": LocalJSX.TableView & JSXBase.HTMLAttributes<HTMLTableViewElement>;
        }
    }
}
